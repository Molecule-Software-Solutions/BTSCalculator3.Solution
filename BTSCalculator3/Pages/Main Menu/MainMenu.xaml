<Page x:Class="BTSCalculator3.MainMenu"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BTSCalculator3"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800"
      Background="{StaticResource BackgroundGray}"
      Title="MainMenu">

    <Grid>
        <Grid.Resources>
            <local:BooleanToYesNoConverter x:Key="YesNoConverter"/>
            <local:BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
        </Grid.Resources>
        <!--Columns-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!--Rows-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Title Bar-->
        <Border Margin="8" BorderBrush="{StaticResource LinearBrushBorderBlue}" Background="{StaticResource LinearBrushBlue}" BorderThickness="2 8 2 2" CornerRadius="10" Grid.ColumnSpan="2">
            <Border.Effect>
                <DropShadowEffect/>
            </Border.Effect>

            <!--Header Text-->
            <TextBlock Margin="8" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Civil Bond to Stay Calculator" FontSize="18" FontWeight="DemiBold" Foreground="White">
                <TextBlock.Effect>
                    <DropShadowEffect/>
                </TextBlock.Effect>
            </TextBlock>

        </Border>
        
        <!--Button Row-->
        <Border Grid.Row="1" Grid.ColumnSpan="2" Margin="8" BorderBrush="{StaticResource LinearBrushBorderBlue}" BorderThickness="2 8 2 2" Background="{StaticResource LinearBrushBlue}" CornerRadius="10">
            <Border.Effect>
                <DropShadowEffect/>
            </Border.Effect>
            
            <!--Button Stackpanel-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                
                <!--Exit Application Button-->
                <Button x:Name="ExitApplicationButton" Click="ExitApplicationButton_Click" Margin="5" Padding="5" Background="{StaticResource LinearBrushRed}" Foreground="White" FontWeight="DemiBold" FontSize="16" Content="Exit Application" BorderBrush="DimGray" BorderThickness="1" Width="150">
                    <Button.Effect>
                        <DropShadowEffect/>
                    </Button.Effect>
                </Button>

                <!--Holiday Manager Button-->
                <Button Margin="5" Padding="5" Background="{StaticResource LinearBrushPurple}" Foreground="White" FontWeight="DemiBold" FontSize="16" Content="System Settings"  BorderThickness="1" Width="150" Command="{Binding GoToSystemSetup_COMMAND, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Effect>
                        <DropShadowEffect/>
                    </Button.Effect>
                </Button>

                <!--Calculate a New Bond Button-->
                <Button Margin="5" Padding="5" Background="{StaticResource LinearBrushGreen}" Foreground="White" FontWeight="DemiBold" FontSize="16" Content="Produce Bond Form"  BorderThickness="1" Command="{Binding GoToFormGenerator_COMMAND, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Effect>
                        <DropShadowEffect/>
                    </Button.Effect>
                </Button>

            </StackPanel>
        </Border>

        <Border Grid.Row="2" Grid.Column="0" Background="{StaticResource LinearBrushBlue}" BorderBrush="{StaticResource LinearBrushBorderBlue}" BorderThickness="2 8 2 2" CornerRadius="10" Margin="8">
            <Border.Effect>
                <DropShadowEffect/>
            </Border.Effect>
            
            <!--Internal Grid-->
            <Grid Margin="5">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel>
                    <local:FriendlyLabeledDatePicker LabelText="Date of Judgment" Margin="5 5" DateTimeSelected="{Binding JudgmentDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:FriendlyLabeledDatePicker LabelText="Next Rent Due Date" Margin="5 5" DateTimeSelected="{Binding RentDueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:FriendlyLabeledTextBox LabelText="Undisputed Rent In Arrears" Margin="5 5" TextboxText="{Binding UndisputedArrears, StringFormat=C2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:FriendlyLabeledTextBox LabelText="Monthly/Weekly Rental Rate" TextboxText="{Binding MonthlyRentalRate, StringFormat=C2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5 5"/>
                    <CheckBox Content="Defendant is Indigent" Foreground="White" FontSize="14" FontWeight="DemiBold" Margin="5 5" IsChecked="{Binding Indigent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                </StackPanel>              


            </Grid>
            
        </Border>


        <Border Grid.Row="2" Grid.Column="1" Background="{StaticResource LinearBrushBlue}" BorderBrush="{StaticResource LinearBrushBorderBlue}" BorderThickness="2 8 2 2" CornerRadius="10" Margin="8">
            <Border.Effect>
                <DropShadowEffect/>
            </Border.Effect>
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Content="Calculate Bond" HorizontalAlignment="Center" Background="{StaticResource LinearBrushGreen}" Margin="5" Foreground="White" Height="25" FontSize="14" Width="150" FontWeight="Bold" Command="{Binding CalculateBond_COMMAND, UpdateSourceTrigger=PropertyChanged}"/>
                <Border Grid.Row="1" Margin="5" Background="{StaticResource LinearBrushCanvas}" BorderBrush="{StaticResource LinearBrushBorderBlue}" BorderThickness="2 6 2 2" CornerRadius="10">
                    <Border.Effect>
                        <DropShadowEffect/>
                    </Border.Effect>
                    <StackPanel>
                        <!-- Business days until rent due -->
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Business days until rent payment due:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding BusinessDayCount, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <!-- Total days until rent due-->
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Total days until rent payment due:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding TotalDayCount, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <!-- Per Diem Rental Rate -->
                        <Grid Margin="5" Visibility="{Binding ShouldPerDiemRentBeCollected, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Per Diem rental rate:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding PerDiemRentRate, StringFormat=C2, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkGreen" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <!-- Per Diem Rental Total -->
                        <Grid Margin="5" Visibility="{Binding ShouldPerDiemRentBeCollected, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Prorated rent total:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding PerDiemRentDue, StringFormat=C2, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkGreen" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <!-- Should Per Diem Rent Be Collected -->
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Should prorated rent be collected:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding ShouldPerDiemRentBeCollected, Converter={StaticResource YesNoConverter}, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <!-- Undisputed Rent In Arrears -->
                        <Grid Margin="5" Visibility="{Binding ShouldUndisputedRentBeCollected, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Undisputed rent to be collected:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding UndisputedArrearsFromCalculation, StringFormat=C2, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkGreen" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <!-- Should Undisputed Rent Be Collected -->
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Should undisputed rent be collected:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding ShouldUndisputedRentBeCollected, Converter={StaticResource YesNoConverter}, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <!-- Total Court Costs -->
                        <Grid Margin="5" Visibility="{Binding ShouldUndisputedRentBeCollected, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Court Costs to be collected:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding TotalCourtCostsDue, StringFormat=C2, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkGreen" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <!-- Should Court Costs Be Collected -->
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="Should Court Costs be collected:" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding ShouldCourtCostsBeCollected, Converter={StaticResource YesNoConverter}, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkBlue" FontSize="14" FontWeight="DemiBold"/>
                        </Grid>

                        <Separator BorderBrush="DarkBlue" BorderThickness="4"/>

                        <!-- Total Due Today -->
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="5 0 0 0" Text="TOTAL DUE TODAY:" Foreground="DarkBlue" FontSize="16" FontWeight="DemiBold" />
                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding TotalDueToday, StringFormat=C2, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkGreen" FontSize="16" FontWeight="DemiBold" />
                        </Grid>

                        <!-- Total Due On Rent Payment Dates -->
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Margin="5 0 0 0">
                                <StackPanel Orientation="Horizontal" >
                                    <TextBlock Text="TOTAL DUE ON: " Foreground="DarkBlue" FontSize="16" FontWeight="DemiBold" />
                                    <TextBlock Text="{Binding RentDueDate, StringFormat=MM/dd/yyyy, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkBlue" FontSize="16" FontWeight="DemiBold" />
                                </StackPanel>
                                <TextBlock Text="(This amount will be due on due dates thereafter)" Foreground="DarkBlue" FontSize="10" FontWeight="DemiBold" />
                            </StackPanel>

                            <TextBlock Grid.Column="1" Margin="5 0 0 0" Text="{Binding TotalDueOnRentDate, StringFormat=C2, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkGreen" FontSize="16" FontWeight="DemiBold" />
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Page>
